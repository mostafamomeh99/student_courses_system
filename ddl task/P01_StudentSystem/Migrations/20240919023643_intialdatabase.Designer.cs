// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

#nullable disable

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20240919023643_intialdatabase")]
    partial class intialdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P01_StudentSystem.models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "for .net developer",
                            EndDate = new DateOnly(2024, 12, 17),
                            Name = "c#",
                            Price = 5500.00m,
                            StartDate = new DateOnly(2024, 9, 17)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "for java developer",
                            EndDate = new DateOnly(2024, 12, 18),
                            Name = "java",
                            Price = 6000.00m,
                            StartDate = new DateOnly(2024, 9, 18)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.models.HomeWorkSubmission", b =>
                {
                    b.Property<int>("HomeWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeWorkId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HomeWorkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeWorkSubmissions");

                    b.HasData(
                        new
                        {
                            HomeWorkId = 1,
                            Content = "http://google.com/homework1",
                            ContentType = 1,
                            CourseId = 1,
                            Name = "homework s1 ",
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 9, 19, 5, 36, 43, 14, DateTimeKind.Local).AddTicks(7478)
                        },
                        new
                        {
                            HomeWorkId = 2,
                            Content = "http://google.com/homework2",
                            ContentType = 2,
                            CourseId = 2,
                            Name = "homework s2 ",
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 9, 19, 5, 36, 43, 14, DateTimeKind.Local).AddTicks(7536)
                        },
                        new
                        {
                            HomeWorkId = 3,
                            Content = "http://google.com/homework2",
                            ContentType = 2,
                            CourseId = 2,
                            Name = "homework s3 ",
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 9, 19, 5, 36, 43, 14, DateTimeKind.Local).AddTicks(7541)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = "Math Video",
                            ResourceType = 0,
                            Url = "http://google.com/math-video"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 2,
                            Name = "Physics Presentation",
                            ResourceType = 1,
                            Url = "http://google.com/physics-presentation"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateOnly>("RegestrionON")
                        .HasColumnType("date");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateOnly(1999, 9, 15),
                            Name = "ahmed",
                            PhoneNumber = "0101404111",
                            RegestrionON = new DateOnly(2024, 9, 15)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateOnly(1998, 9, 15),
                            Name = "mohamed",
                            PhoneNumber = "0101404112",
                            RegestrionON = new DateOnly(2024, 9, 13)
                        },
                        new
                        {
                            StudentId = 3,
                            Birthday = new DateOnly(1997, 9, 15),
                            Name = "mostafa",
                            PhoneNumber = "0101404113",
                            RegestrionON = new DateOnly(2024, 9, 12)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 1
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.models.HomeWorkSubmission", b =>
                {
                    b.HasOne("P01_StudentSystem.models.Course", "Course")
                        .WithMany("HomeWorkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.models.Student", "Student")
                        .WithMany("HomeWorkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("P01_StudentSystem.models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.models.Course", b =>
                {
                    b.Navigation("HomeWorkSubmissions");

                    b.Navigation("Resources");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("P01_StudentSystem.models.Student", b =>
                {
                    b.Navigation("HomeWorkSubmissions");

                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
